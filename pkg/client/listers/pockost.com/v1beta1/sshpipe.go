/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1beta1

import (
	v1beta1 "github.com/pockost/sshpipe-k8s-lib/pkg/apis/pockost.com/v1beta1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// SshPipeLister helps list SshPipes.
// All objects returned here must be treated as read-only.
type SshPipeLister interface {
	// List lists all SshPipes in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1beta1.SshPipe, err error)
	// SshPipes returns an object that can list and get SshPipes.
	SshPipes(namespace string) SshPipeNamespaceLister
	SshPipeListerExpansion
}

// sshPipeLister implements the SshPipeLister interface.
type sshPipeLister struct {
	indexer cache.Indexer
}

// NewSshPipeLister returns a new SshPipeLister.
func NewSshPipeLister(indexer cache.Indexer) SshPipeLister {
	return &sshPipeLister{indexer: indexer}
}

// List lists all SshPipes in the indexer.
func (s *sshPipeLister) List(selector labels.Selector) (ret []*v1beta1.SshPipe, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.SshPipe))
	})
	return ret, err
}

// SshPipes returns an object that can list and get SshPipes.
func (s *sshPipeLister) SshPipes(namespace string) SshPipeNamespaceLister {
	return sshPipeNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SshPipeNamespaceLister helps list and get SshPipes.
// All objects returned here must be treated as read-only.
type SshPipeNamespaceLister interface {
	// List lists all SshPipes in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1beta1.SshPipe, err error)
	// Get retrieves the SshPipe from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1beta1.SshPipe, error)
	SshPipeNamespaceListerExpansion
}

// sshPipeNamespaceLister implements the SshPipeNamespaceLister
// interface.
type sshPipeNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SshPipes in the indexer for a given namespace.
func (s sshPipeNamespaceLister) List(selector labels.Selector) (ret []*v1beta1.SshPipe, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.SshPipe))
	})
	return ret, err
}

// Get retrieves the SshPipe from the indexer for a given namespace and name.
func (s sshPipeNamespaceLister) Get(name string) (*v1beta1.SshPipe, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1beta1.Resource("sshpipe"), name)
	}
	return obj.(*v1beta1.SshPipe), nil
}
